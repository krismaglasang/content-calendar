services:
  db:
    container_name: pg_for_content_app
    image: postgres
    ports:
      - ${PG_PORT}:5432
    environment:
      POSTGRES_USERNAME: ${PG_USERNAME}
      POSTGRES_PASSWORD: ${PG_PASSWORD}
      POSTGRES_DB: ${PG_DB}
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
      - ./src/main/resources/db:/docker-entrypoint-initdb.d
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "${PG_DB}", "-U", "${PG_USERNAME}" ]
      interval: 10s
      timeout: 5s
      retries: 5

#  app:
#    container_name: content_app
#    build:
#      context: .
#      dockerfile: Dockerfile
#    depends_on:
#      - db
#    ports:
#      - 8080:8080
#    env_file:
#      - .env
##    environment:
##      SPRING_CONFIG_IMPORT: optional:file:.env[.properties]
##      SPRING_DATASOURCE_URL: jdbc:postgresql://db:${PG_PORT}/${PG_DB}
##      SPRING_DATASOURCE_USERNAME: ${PG_USERNAME}
##      SPRING_DATASOURCE_PASSWORD: ${PG_PASSWORD}
##      SPRING_DATASOURCE_DRIVER_CLASS_NAME: org.postgresql.Driver
##      SPRING_JPA_DATABASE_PLATFORM: org.hibernate.dialect.PostgreSQLDialect
##      SPRING_JPA_HIBERNATE_DDL_AUTO: create-drop
##      SPRING_JPA_PROPERTIES_HIBERNATE_FORMAT_SQL: true
##      SPRING_JPA_SHOW_SQL: true
##      SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT: org.hibernate.dialect.PostgreSQLDialect
#    networks:
#      - app_net